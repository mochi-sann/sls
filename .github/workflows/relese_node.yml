name: relase-node

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        deno: [1.24.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno }}

      - name: Get tag version
        if: startsWith(github.ref, 'refs/tags/')
        id: version
        run: echo ::set-output name=TAG_VERSION::${GITHUB_REF/refs\/tags\//}

      - name: npm build
        run: deno run -A scripts/build_npm.ts ${{steps.version.outputs.TAG_VERSION}}

      - uses: apexskier/github-semver-parse@v1
        id: semver
        with:
          version: ${{steps.version.outputs.TAG_VERSION}}

      - name: Set tag
        id: tag
        run: |
          DIRTY_PRELELEASE=${{steps.semver.outputs.prerelease}}
          PRELEREASE=${DIRTY_PRELELEASE%.*}

          [ "$PRELEREASE" = "" ] && TAG="latest" || TAG=$PRELEREASE

          echo ::set-output name=RELEASE_TAG::$TAG

      - uses: JS-DevTools/npm-publish@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./npm/package.json
          tag: ${{ steps.tag.outputs.RELEASE_TAG }}


